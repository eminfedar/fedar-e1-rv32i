$date
	Sun Dec  4 14:45:25 2022
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb_RegFile $end
$var wire 32 ! R2_data [31:0] $end
$var wire 32 " R1_data [31:0] $end
$var reg 5 # R1 [4:0] $end
$var reg 5 $ R2 [4:0] $end
$var reg 5 % RD [4:0] $end
$var reg 32 & RD_DATA [31:0] $end
$var reg 1 ' reg_write_enable $end
$scope module regfile $end
$var wire 5 ( R1 [4:0] $end
$var wire 32 ) R1_DATA [31:0] $end
$var wire 5 * R2 [4:0] $end
$var wire 32 + R2_DATA [31:0] $end
$var wire 5 , RD [4:0] $end
$var wire 32 - RD_DATA [31:0] $end
$var wire 1 ' WRITE_ENABLE $end
$var integer 32 . i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 .
bx -
bx ,
bx +
bx *
bx )
bx (
x'
bx &
bx %
bx $
bx #
bx "
bx !
$end
#200
0'
b0 &
b0 -
b0 %
b0 ,
b0 !
b0 +
b0 $
b0 *
b0 "
b0 )
b0 #
b0 (
#400
1'
b101 &
b101 -
b1 %
b1 ,
#600
b1010 &
b1010 -
b10 %
b10 ,
b101 "
b101 )
b1 #
b1 (
#800
0'
b1100011 &
b1100011 -
b11 %
b11 ,
b1010 !
b1010 +
b10 $
b10 *
#1000
b1 %
b1 ,
b0 "
b0 )
b11 #
b11 (
#1200
1'
b0 %
b0 ,
b101 !
b101 +
b1 $
b1 *
#1400
0'
b0 &
b0 -
b0 #
b0 (
#1600
