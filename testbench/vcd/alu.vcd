$date
	Sun Dec  4 14:45:25 2022
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb_ALU $end
$var wire 32 ! result [31:0] $end
$var wire 1 " isEqual $end
$var reg 32 # a [31:0] $end
$var reg 32 $ b [31:0] $end
$var reg 4 % op [3:0] $end
$scope module alu $end
$var wire 4 & OP [3:0] $end
$var wire 32 ' X [31:0] $end
$var wire 32 ( X_signed [31:0] $end
$var wire 32 ) Y [31:0] $end
$var wire 32 * Y_signed [31:0] $end
$var wire 1 " isEqual $end
$var reg 32 + RESULT [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
x"
bx !
$end
#200
b1010 !
b1010 +
b0 %
b0 &
b101 *
1"
b101 $
b101 )
b101 (
b101 #
b101 '
#400
b110111 !
b110111 +
b1 %
b1 &
b1011 *
b1011 $
b1011 )
b1000010 (
0"
b1000010 #
b1000010 '
#600
b100 !
b100 +
b10 %
b10 &
b110 *
b110 $
b110 )
b101 (
b101 #
b101 '
#800
b111 !
b111 +
b11 %
b11 &
#1000
b100 !
b100 +
b100 %
b100 &
b10 *
b10 $
b10 )
b110 (
0"
b110 #
b110 '
#1200
b1000 !
b1000 +
b101 %
b101 &
b11 *
b11 $
b11 )
b1 (
b1 #
b1 '
#1400
b10 !
b10 +
b110 %
b110 &
b10 *
b10 $
b10 )
b1000 (
b1000 #
b1000 '
#1600
b11111111111111111111111111111110 !
b11111111111111111111111111111110 +
b111 %
b111 &
b11111111111111111111111111111000 (
b11111111111111111111111111111000 #
b11111111111111111111111111111000 '
#1800
b1 !
b1 +
b1000 %
b1000 &
b1001 *
b1001 $
b1001 )
b11111111111111111111111111111111 (
b11111111111111111111111111111111 #
b11111111111111111111111111111111 '
#2000
b0 !
b0 +
b1001 %
b1001 &
#2200
